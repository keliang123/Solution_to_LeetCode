/*
	给定一个已排序的正整数数组 nums，和一个正整数 n 。从 [1, n] 区间内选取任意个数字补充到 nums 中，使得 [1, n] 区间内的任何数字都可以用 nums 中某几个数字的和来表示。请输出满足上述要求的最少需要补充的数字个数。

示例 1:

输入: nums = [1,3], n = 6
输出: 1 
解释:
根据 nums 里现有的组合 [1], [3], [1,3]，可以得出 1, 3, 4。
现在如果我们将 2 添加到 nums 中， 组合变为: [1], [2], [3], [1,3], [2,3], [1,2,3]。
其和可以表示数字 1, 2, 3, 4, 5, 6，能够覆盖 [1, 6] 区间里所有的数。
所以我们最少需要添加一个数字。

	解答：每次找到未被数组 \textit{nums}nums 覆盖的最小的整数 xx，在数组中补充 xx，然后寻找下一个未被覆盖的最小的整数，重复上述步骤直到区间 [1,n][1,n] 中的所有数字都被覆盖。

具体实现方面，任何时候都应满足区间 [1,x-1][1,x−1] 内的所有数字都被覆盖。令 xx 的初始值为 11，数组下标 \textit{index}index 的初始值为 00，则初始状态下区间 [1,x-1][1,x−1] 为空区间，满足区间内的所有数字都被覆盖。进行如下操作。

如果 \textit{index}index 在数组 \textit{nums}nums 的下标范围内且 \textit{nums}[\textit{index}] \le xnums[index]≤x，则将 \textit{nums}[\textit{index}]nums[index] 的值加给 xx，并将 \textit{index}index 的值加 11。

被覆盖的区间从 [1,x-1][1,x−1] 扩展到 [1,x+\textit{nums}[\textit{index}]-1][1,x+nums[index]−1]，对 xx 的值更新以后，被覆盖的区间为 [1,x-1][1,x−1]。
否则，xx 没有被覆盖，因此需要在数组中补充 xx，然后将 xx 的值乘以 22。

在数组中补充 xx 之后，被覆盖的区间从 [1,x-1][1,x−1] 扩展到 [1,2x-1][1,2x−1]，对 xx 的值更新以后，被覆盖的区间为 [1,x-1][1,x−1]。
重复上述操作，直到 xx 的值大于 nn。

	
*/